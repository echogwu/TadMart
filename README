1) How to run the program?
   a. run the jar file to get info from Amazon
      $ java -jar run.jar
   b. run the Restful API program
      $ cd ../Restful/
      $ virtualenv flask
      $ source flask/bin/activate
      (flask)$ pip install -r requirements.txt        //下载相关的包
      (flask)$ ./run.py
      (flask)$ deactivate      //when you want to exit the virtualenv
      Then you can check the API results from 127.0.0.1:5000/api/1.0/orders or other URIs.
      >> NOTE: virtualenv directory flask has been ignored but it is required to run the program since some flask packages won't be installed without virtualenv. There are lower versions of same packages installed with python bundled with Mac OS.  If we want to install higher version of packages, we need this virtualenv to work. This is the case with Mac OS. It might not happen with other OS. If run on other operating systems, we need to change python interpreter from #!flask/bin/python to your system's python path.

2) database design:
sqlite> .tables
INVENTORY   ORDERITEMS
sqlite> .schema Inventory
CREATE TABLE INVENTORY (id Integer primary key,asin text, supplier text, sellerSKU text not null, fnsku text not null, condition text, totalSupplyQuantity integer, inStockSupplyQuantity integer, costEach double, category text);
sqlite> .schema orderitems
CREATE TABLE ORDERITEMS (id integer primary key, lastUpdateDate String not null, asin text, supplier text not null, sellerSKU text,orderItemId text,title text,quantityShipped integer,itemPriceCurrency text,itemPrice double,shippingPrice double,giftWrapPrice double,itemTax double,shippingTax double,giftWrapTax double,shippingDiscount double,promotionDiscount double,inventory_id integer,category text, FOREIGN KEY (inventory_id) REFERENCES INVENTORY(id));

3) API specs:
https://github.com/echogwu/TadMart/wiki/Restful-APIs-provided-by-backend-so-far

4) Project structure(backend):
> Extract data from Amazon according to seller's secret ID
> store data to local database
> provide restful APIs to client(front end)

